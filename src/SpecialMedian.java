import java.util.PriorityQueue;

public class SpecialMedian {
	private static float med(int a, int b) {
		float ans;
		if (a > b) {
			ans = b + (a - b) / 2;
			return ans;
		} else {
			ans = a + (b - a) / 2;
			return ans;
		}
	}

	private static boolean special(int[] arr) {
		PriorityQueue<Integer> pq = new PriorityQueue<Integer>(arr.length, new MinHeap());
		PriorityQueue<Integer> qp = new PriorityQueue<Integer>(arr.length, new MaxHeap());
		boolean ans = false;
		float median = 0;
		for (int i = 0; i < arr.length - 1; i++) {
			if (pq.isEmpty() && qp.isEmpty()) {
				qp.add(arr[i]);
				median = arr[i];

			}

			else {
				if (arr[i] <= median) {
					qp.add(arr[i]);
					int difference = qp.size() - pq.size();
					if (difference > 1)
						pq.add(qp.poll());

					else if (difference == 1)median = qp.peek();
					
						median = med(qp.peek(), pq.peek());
					
						

				} else {
					pq.add(arr[i]);
					int difference = pq.size() - qp.size();
					if (difference > 1)
						qp.add(pq.poll());

					else if (difference == 1)median = qp.peek();
					
					median = med(qp.peek(), pq.peek());

				}
			}
			if (median == arr[i + 1]) {

				ans = true;
				break;
			}
		}
		return ans;
	}

	private static void reverse(int[] arr) {
		for (int i = 0; i < arr.length / 2; i++) {

			int temp = arr[i];
			arr[i] = arr[arr.length - i - 1];
			arr[arr.length - i - 1] = temp;
		}

	}

	public static void main(String[] args) {
		int[] arr = { -950204, -950921, -950911, -950951, -950342, -950425, -950451, 950198, 950480, 950382, -950614,
				-950204, -950009, -950005, 950666, -950080, -950541, 950886, 950733, -950724, 950292, -950951, 950527,
				950287, 950920, 950127, 950710, 950803, 950483, 950635, -950277, -950080, 950711, -950853, -950408,
				-950448, -950141, 950416, 950818, 950984, 950974, -950885, -950960, -950085, 950101, 950505, -950796,
				950109, -950987, -950525, 950802, -950746, 950352, 950989, 950398, 950018, 950257, 950873, 950068,
				950610, -950125, 950839, 950518, 950518, 950167, -950166, 950226, -950882, -950760, -950557, -950554,
				-950061, 950521, 950098, 950258, 950345, -950189, 950956, 950725, -950532, -950421, 950762, -950208,
				950530, 950490, 950569, 950253, 950656, -950583, 950593, -950362, 950666, 950219, 950664, 950608,
				-950014, 950212, 950622, -950492, -950999, -950271, -950192, -950217, 950988, -950089, -950414, -950268,
				950358, -950745, 950797, 950647, 950237, -950907, -950549, -950039, -950012, -950431, 950691, 950845,
				-950416, 950056, -950872, -950008, -950309, -950358, -950744, 950930, 950649, -950868, 950901, -950255,
				950927, -950362, -950818, 950289, 950941, 950796, 950840, -950135, -950582, -950250, 950852, -950601,
				950033, 950894, 950526, -950533, -950512, -950825, -950812, -950845, 950202, 950758, -950677, 950111,
				-950650, 950980, 950327, 950716, -950118, 950777, -950065, 950713, -950176, -950874, 950241, -950097,
				-950248, -950148, -950536, 950617, 950624, -950638, -950561, -950547, 950039, -950981, 950414, -950316,
				950967, 950167, -950163, -950774, 950999, 950080, 950824, -950086, 950257, -950215, -950275, 950582,
				-950037, 950962, 950028, -950612, -950876, 950958, -950191, -950122, -950550, 950728, -950742, 950860,
				950477, -950695, -950213, -950525, 950295, -950848, -950084, -950091, 950232, -950337, -950432, 950534,
				-950637, 950102, -950514, -950269, -950547, 950503, 950606, 950297, 950102, 950063, 950317, 950151,
				-950538, 950454, -950012, 950922, 950174, -950808, 950851, -950623, -950211, 950589, 950015, 950728,
				950921, 950863, 950488, -950714, -950475, 950831, 950619, -950647, -950406, 950752, -950561, 950380,
				950550, -950738, 950951, 950940, -950625, 950104, -950380, -950611, 950058, 950051, -950430, 950747,
				-950296, 950205, -950406, 950515, 950588, 950334, -950023, 950963, -950726, 950707, 950266, -950425,
				950248, 950530, -950413, -950016, 950905, -950807, 950703, 950452, 950684, -950594, -950790, 950047,
				-950607, 950958, 950746, -950422, -950413, 950052, -950791, 950924, -950708, -950958, 950263, 950831,
				950679, 950100, -950909, -950654, 950597, -950979, -950139, -950081, 950792, 950697, -950813, 950929,
				-950351, -950194, 950988, 950971, 950980, 950966, 950756, -950466, 950359, -950184, -950094, -950866,
				950266, 950913, -950286, 950166, -950122, 950883, -950966, -950946, -950708, -950670, 950266, 950378,
				-950038, 950359, -950978, 950921, 950890, 950444, -950507, -950523, -950647, -950225, 950382, 950740,
				950855, 950526, 950863, -950966, 950345, -950886, 950720, -950606, 950361, 950938, 950795, 950799,
				-950795, 950252, 950140, 950855, -950052, -950445, -950997, 950789, 950705, 950447, -950503, 950265,
				950246, 950803, -950263, 950316, 950777, -950828, -950703, -950476, 950108, 950402, -950441, -950393,
				-950414, -950857, -950304, -950691, -950826, 950583, -950511, 950305, -950206, 950418, -950791, -950467,
				950934, 950975, 950694, -950465, -950639, -950460, 950586, 950122, 950948, -950119, 950466, -950750,
				950341, -950548, -950918, 950212, 950619, -950571, -950042, -950749, 950261, 950736, 950606, 950783,
				-950405, 950153, 950545, 950780, 950380, 950347, 950081, 950544, -950426, 950662, -950029, -950598,
				950727, 950460, 950180, -950347, -950165, 950423, 950187, -950809, 950091, -950544, 950075, -950205,
				950724, -950856, -950760, -950650, 950966, 950778, -950843, -950932, -950763, -950335, -950857, 950166,
				950491, 950929, 950250, -950693, -950288, 950057, -950827, -950226, -950241, -950666, -950692, -950412,
				-950216, 950827, 950042, -950163, -950396, -950896, -950678, 950486, 950303, 950001, -950845, -950094,
				-950993, -950394, -950542, 950569, 950643, -950201, -950023, -950561, 950101, -950900, -950456, 950210,
				950593, -950792, -950990, 950775, 950069, 950139, 950306, 950173, -950573, 950827, 950336, -950102,
				-950007, -950764, -950008, -950008, 950157, -950831, -950696, -950467, 950190, 950605, 950383, -950439,
				950942, 950440, -950540, 950443, -950153, 950610, 950709, -950471, -950332, 950420, -950881, 950588,
				950252, 950865, 950430, -950102, 950788, -950072, 950219, -950993, -950756, 950693, 950032, 950873,
				-950933, -950856, -950025, -950000, 950022, 950053, 950895, 950508, -950634, -950123, -950982, -950375,
				-950439, -950565, 950168, -950469, 950113, -950340, -950633, -950321, 950677, 950906, -950249, 950056,
				950566, 950057, 950461, -950660, -950163, 950378, -950334, -950499, 950199, 950366, -950232, 950078,
				-950800, -950993, 950757, -950058, 950617, -950706, -950312, 950602, 950136, -950116, -950306, 950115,
				-950160, 950336, -950608, 950782, 950616, -950712, -950170, -950042, -950458, -950662, 950981, -950704,
				-950597, 950595, 950115, 950221, -950604, -950640, -950566, 950931, -950756, -950065, -950265, 950984,
				950402, 950957, 950407, 950686, -950035, 950231, -950049, 950401, 950546, 950576, -950708, 950164,
				950725, 950883, -950377, 950380, -950168, 950383, 950316, -950948, -950041, 950273, -950189, 950223,
				950178, 950503, 950890, 950177, 950203, -950830, -950099, -950103, -950117, -950868, -950692, -950106,
				-950848, 950567, 950407, 950471, -950030, -950845, -950759, -950042, -950277, 950633, -950278, -950311,
				-950017, 950869, -950848, 950760, -950863, -950490, -950526, 950610, 950339, -950162, 950220, 950815,
				-950372, 950390, -950555, -950077, 950275, -950976, 950048, 950190, 950367, 950323, -950003, -950086,
				950452, 950541, 950201, -950304, 950391, 950260, 950826, 950690, 950707, 950847, -950883, 950428,
				-950048, 950640, -950709, 950565, 950887, -950976, 950653, 950229, -950343, 950771, 950778, -950188,
				-950002, 950968, -950666, 950418, 950001, -950619, -950613, -950389, 950804, 950219, 950088, -950295,
				-950643, 950747, -950124, 950525, -950792, 950197, -950805, -950856, 950730, 950034, -950171, 950656,
				950236, -950924, -950972, 950652, 950580, -950380, 950599, -950867, 950812, 950684, -950658, -950887,
				950077, -950959, -950630, -950140, -950391, -950276, -950094, 950437, 950385, -950927, -950196, -950368,
				950975, 950183, -950148, 950333, 950127, 950601, -950495, -950835, 950652, -950595, -950273, 950467,
				-950163, 950474, -950930, 950395, 950833, -950045, -950985, -950772, 950771, 950696, -950061, -950716,
				950739, -950497, 950578, 950772, 950658, -950478, -950610, 950995, -950577, -950454, -950602, 950994,
				-950374, -950883, 950881, 950670, -950318, -950967, 950572, 950138, -950789, -950460, -950300, 950434,
				950575, 950890, -950990, -950705, -950643, -950564, -950298, -950875, -950923, -950051, 950677, -950260,
				950117, 950770, 950855, 950727, -950300, 950969, -950398, -950359, 950456, -950810, -950913, -950882,
				950266, -950631, -950501, -950585, 950073, 950594, -950388, -950802, 950168, 950371, -950633, -950862,
				950101, -950685, 950117, -950763, 950932, -950953, -950213, 950707, 950266, -950482, -950802, -950571,
				950698, -950144, -950224, 950101, 950740, -950925, 950559, 950270, -950912, -950563, -950541, -950505,
				950711, -950284, 950258, 950394, 950123, -950096, 950258, -950876, 950706, 950795, 950143, -950139,
				950839, -950372, -950396, 950771, -950529, -950447, 950939, -950615, -950242, 950707, -950848, -950971,
				-950209, 950925, -950868, 950555, 950289, -950355, 950323, -950049, -950784, 950786, 950822, 950258,
				-950800, 950985, -950362, -950922, 950401, 950012, 950919, -950148, 950405, -950090, -950281, -950795,
				-950411, 950647, -950371, 950100, 950717, 950539, 950423, 950409, 950002, 950585, -950807, -950535,
				950812, 950984 };

		if (special(arr))
			System.out.println(1);
		reverse(arr);
		if (special(arr))
			System.out.println(1);
		else
			System.out.println(0);

	}
}
